<?php

// Задача. Дан массив с элементами 10, 20, 15, 17, 24, 35.
//  Найдите сумму элементов этого массива. Запишите ее в переменную $result.

// $rez = [10, 20, 15, 17, 24, 35];
// $result = 0;
// foreach( $rez as $elem) {

//     $result = $result + $elem;
// }
// echo $result;



// Задача. Дан массив 
// с элементами 'html', 'css', 'php', 'js', 'jq'. С помощью цикла foreach выведите эти слова в столбик.

// Решение: Для начала необходимо создать сам массив.
//  В данном случае мы можем воспользоваться различными способами: 
//  объявить через [] либо просто воспользоваться присваиванием $arr[] = 'html'; $arr[] = 'php'; 
//  и так далее. Я выбрал первый способ, так как он занимает меньше места при записи:

// <?php
//     $arr = ['html', 'css', 'php', 'js', 'jq'];
// 
// Теперь необходимо воспользоваться циклом foreach:

// <?php
//     $arr = ['html', 'css', 'php', 'js', 'jq'];
//     foreach ($arr as $elem) {
//         echo $elem.'<br>'; 
//     }
// 
// Как это все работает: в переменной $elem все элементы будут лежать по порядку:
//  сначала 'html', потом 'css' и так далее. Я буду выводить их на экран с помощью echo, 
//  а после вывода элемента ставить тег <br> (он делает перевод строки). Содержимое $
// и тег <br> являются строками, поэтому между ними я ставлю точку -
//  соединяю тем самым две строки вместе.

// Задача. Выведите столбец чисел от 1 до 100.

// Скрыть решение.

// Решение: Задачу можно решить как циклом for, так и циклом while. Вначале решим через цикл while:


//     $i = 1; //счетчик цикла устанавливаем в 1
//     while ($i <= 100) {
//         echo $i.'<br>'; //выведет 1,2... 100
//         /*
//             С помощью оператора ++ увеличиваем $i 
//             на единицу при каждом проходе цикла:
//         */
//         $i++;
//     }

// Решение через цикл for:

// for($result = 0; $result <= 100; $result++ ){
//     echo $result."<br>";
// }


// Задачи для решения
// Работа с foreach
// Дан массив с элементами 'html', 'css', 'php', 'js', 'jq'.
//  С помощью цикла foreach выведите эти слова в столбик.

// $str = ['html', 'css', 'php', 'js', 'jq'];
// foreach ( $str as $elem){
//     echo $elem."<br>";
// }

// Дан массив с элементами 1, 2, 3, 4, 5. 
// С помощью цикла foreach найдите сумму элементов этого массива. Запишите ее в переменную $result.

// $num = [1, 2, 3, 4, 5];
// $result = 0;
// foreach($num as $elem){
//     $result = $result + $elem;
// }
// echo $result."<br>";

// Дан массив с элементами 1, 2, 3, 4, 5. 
// С помощью цикла foreach найдите сумму квадратов элементов этого массива.
// Результат запишите переменную $result.



// $num = [1, 2, 3, 4, 5]; // 1 4 9 16 25 
// $result = 0; // в квадрате
// $plus = 0 ; // сумма этих квадратов
// foreach($num as $elem){
//     $result = $elem * $elem;
//     // $plus = $elem + $elem ;
//     $plus += $result ;

// // echo $result."<br>";
// echo $plus."<br>";
// }


// Работа с ключами
// Дан массив $arr. С помощью цикла foreach выведите на экран столбец ключей и
//  элементов в формате 'green - зеленый'.

// $arr = ['green'=>'зеленый', 'red'=>'красный','blue'=>'голубой'];

// $arr = ['green'=>'зеленый', 'red'=>'красный','blue'=>'голубой'];

// foreach( $arr as $key => $elem){
//     echo $key."-".$elem."<br>";
// };




// Дан массив $arr с ключами 'Коля', 'Вася', 'Петя' и с элементами '200', '300', '400'
// С помощью цикла foreach выведите на экран столбец строк такого формата: 'Коля - зарплата 200 долларов.'.

// $arr = ['Коля' => '200', 'Вася' => '300', 'Петя' => '400', ];
// foreach($arr as $key=>$elem){
//     echo $key." ЗП ".$elem." Долларов "."<br>";
// }

/* 
Циклы while и for
Решите эти задачи сначала через цикл while, а затем через цикл for.
Выведите столбец чисел от 1 до 100.
*/ 
// for($i = 0; $i <= 100 ; $i++){
// echo $i."<br>";
// }

// $i = 0;
// while($i <= 99){
//     $i++;
//     echo $i."<br>";
// }

/* 
Выведите столбец чисел от 11 до 33.
*/
// $i = 10;
// while($i <= 32){
//     $i++;
//     echo $i."<br>";
// }


// for($i = 11; $i <= 33 ; $i++){
// echo $i."<br>";
// }


/*
Выведите столбец четных чисел в промежутке от 0 до 100.
*/

// $i = 25;
// while($i <= 37){
//     $i++;
//     echo $i."<br>";
// }


// for($i = 46; $i <= 85 ; $i++){
// echo $i."<br>";
// }


/*
С помощью цикла найдите сумму чисел от 1 до 100.
*/
// $result = 0;
// for($i = 1; $i <= 100; $i++ ){
//  $result += $i;
//  echo $result."<br>";
// }

// $result = 0;
// while($i <= 100){
//     $i++;
//     $result += $i; 
//     echo $result."<br>";
// }

// Задачи
// Дан массив с элементами 2, 5, 9, 15, 0, 4. С помощью цикла foreach 
// и оператора if выведите на экран столбец тех элементов массива, которые больше 3-х, но меньше 10.

// $arr = [2, 5, 9, 15, 0, 4];
// foreach ($arr as $value){
//     if ($value > 3 && $value < 10){
//     echo $value."\n";
//     }
//     }




// Дан массив с числами. Числа могут быть положительными и отрицательными. 
// Найдите сумму положительных элементов этого массива.

// $arr = [-2, 5, -9, 15, 0, 4];
// foreach ($arr as $value){
//     if ($value > 0){
//         $result += $value;
//     echo $result."\n";
//     }
//     }


// Дан массив с элементами 1, 2, 5, 9, 4, 13, 4, 10. С помощью цикла foreach и 
// оператора if проверьте есть ли в массиве элемент со значением, равным 4. 
// Если есть - выведите на экран 'Есть!' и выйдите из цикла.
//   Если нет - ничего делать не надо.

// $el = [1, 2, 5, 9, 4, 13, 10];
// foreach( $el as $elem){
//     if ($elem == 4 ) {echo "Есть"; 
// break; 
//     }
// }

// Дан массив числами, например: ['10', '20', '30', '50', '235', '3000'].
//  Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5.

// $el = ['10', '20', '30', '50', '235', '3000'];
// foreach( $el as $elem){
//     if ($elem[0] == 1) echo $elem."<br>";
//     elseif ($elem[0] == 2) echo $elem."<br>";
//     elseif ($elem[0] == 5) echo $elem."<br>";    
// }



// Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла foreach 
// создайте строку '-1-2-3-4-5-6-7-8-9-'.

// $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]; 
// foreach($arr as $elem){
//     echo '-'.$elem;
// }

// $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]; 
// foreach($arr as $elem){
//     $str = '-'.$elem;
//     echo $str;
// }


// Составьте массив дней недели. С помощью цикла foreach выведите все дни недели,
//  а выходные дни выведите жирным.

// $day = [ 1 =>"Пн", "Вт", "Ср", "Чт", "Пт","Сб", "Вс",];
// foreach($day as $key => $week) {
//     if( $key == 6 or $key == 7)
//         echo "<b>".$week."</b>"."<br>";
//     else echo $week."<br>";
// }

// echo $day[6]."<br>"."<b>"

// Составьте массив дней недели. С помощью цикла foreach выведите все дни недели,
//  а текущий день выведите курсивом. Текущий день должен храниться в переменной $day.

// $day = 4;
// $week = [ "Пн", "Вт", "Ср", "Чт", "Пт","Сб", "Вс",];
// foreach ( $week as $key => $elem) {
//   if ($day == $key )  echo "<i>".$elem."<i>"."<br>";
//   else echo $elem."<br>";
// }


// С помощью цикла for заполните массив числами от 1 до 100.
//  То есть у вас должен получится массив [1, 2, 3... 100].


// $num = []; 
// for($i=1; $i<=100; $i++){ 
// $num[] = $i; 
// } 
// var_dump($num); 


// Дан массив $arr. С помощью цикла foreach запишите английские названия в массив $en, 
// а русские - в массив $ru.

// $arr = [
// "en" => [
//     "Dog",
//     "Cat",
//     "City",
//     "Street",
// ],
// "ru" => [ 
//     "Собака",
//     "Кошка",
//     "Город",
//     "Улица",
// ],
// ];

// $arr = [
//     "Dog" => "Собака",
//     "Cat" => "Кошка",
//     "City" => "Город",
//     "Street" => "Улица",
// ];
// foreach($arr as $key => $elem) {
//     $en[]=$key;
//     $ru[]=$elem;
// }
// var_dump($en);

// Дано число $num=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50.
//  Какое число получится? Посчитайте количество итераций, 
//  необходимых для этого (итерация - это проход цикла). Решите задачу сначала через цикл while,
//   а потом через цикл for.



// $num = 1000;
// $result = 0;

// while( $num > 50 ) {
//     $num /= 2;
//     $result++;
// }

// echo $num."<br>";
// echo $result;

